This is 3d game object data contained in json files. The files at the root of the zip file are the stand-alone "top level" game objects. They contain links to other json files in the sub folders that comprise the "complete" object. For instance, 12390-13.json is a "Greater Horned Basilisk" which you can see by the json property "obj_name", it has multiple render detail json files in the RENDER folder. These are found in the "rune_body_parts" array of the file 12390-13.json. Each member of the array corresponds to a json file in the RENDER folder so  RENDER/700021.json,  RENDER/700023.json, etc.  Opening the 700021.json file we find information that details the mesh, textures, and other reder details like specular_map. In this case we find that the bone target is LOWERBACK and mesh file is contained in the polymesh_id property. This additionally contains texture data in the render_texture_set property the "texture_id" points to a jpg in the TEXTURE folder so TEXTURE/700004.jpg, also of note is that  a render file can point to child render files by the use of the "render_children" array. What I would like you to do is create a python script that can intelligently assemble all of the different parts of these models into a cohesive whole. it should output the combined json files into a folder called ACTUAL and name each with the obj_name found in the toplevel cobjects file so ACTUAL/Greater Horned Basilisk.json. Do not copy the actual .jpg to the new file but it should include ALL relevant data. Note that this pattern is also used for json files in the MOTION and SKELETON folders and you should be able to figure out how those are related by thoroughly analyzing the uploaded data. Once you have finished analyzing it and are prepared to begin scripting let me know.